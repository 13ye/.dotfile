set encoding=utf-8
set backspace=2		
set autoindent
set smartindent
set expandtab
set shiftwidth=4
set tabstop=4
set expandtab
set modelines=0		
set cursorline
set cursorcolumn
colorscheme desert

" Rename tabs to show tab number.
" (Based on http://stackoverflow.com/questions/5927952/whats-implementation-of-vims-default-tabline-function)
if exists("+showtabline")
    function! MyTabLine()
        let s = ''
        let wn = ''
        let t = tabpagenr()
        let i = 1
        while i <= tabpagenr('$')
            let buflist = tabpagebuflist(i)
            let winnr = tabpagewinnr(i)
            let s .= '%' . i . 'T'
            let s .= (i == t ? '%1*' : '%2*')
            let s .= ' '
            let wn = tabpagewinnr(i,'$')

            let s .= '%#TabNum#'
            let s .= i
            " let s .= '%*'
            let s .= (i == t ? '%#TabLineSel#' : '%#TabLine#')
            let bufnr = buflist[winnr - 1]
            let file = bufname(bufnr)
            let buftype = getbufvar(bufnr, 'buftype')
            if buftype == 'nofile'
                if file =~ '\/.'
                    let file = substitute(file, '.*\/\ze.', '', '')
                endif
            else
                let file = fnamemodify(file, ':p:t')
            endif
            if file == ''
                let file = '[No Name]'
            endif
            let s .= ' ' . file . ' '
            let i = i + 1
        endwhile
        let s .= '%T%#TabLineFill#%='
        let s .= (tabpagenr('$') > 1 ? '%999XX' : 'X')
        return s
    endfunction
    set stal=2
    set tabline=%!MyTabLine()
    set showtabline=1
    highlight link TabNum Special
endif

set tabline=%!MyTabLine()

" hybrid absolute and relative line number
set nu rnu
set foldmethod=indent
set helpheight=40

set background=dark
syntax on
filetype on

autocmd! bufwritepost vimrc source ~/.dotfile/vim/vimrc
source ~/.dotfile/vim/preference/plugin.vim

let mapleader= '\'
map <F5> :call Compile()<CR>
map <F6> :call Run()<CR>
map <F7> :call Debug()<CR>

nnoremap <silent> <leader>ee :e ~/.dotfile/vim/vimrc <CR>
nnoremap <silent> <leader>ep :e ~/.dotfile/vim/preference/plugin.vim <CR>
nnoremap <leader>w :w<CR>
nnoremap <leader>c :call Compile()<CR><CR>:call Run()<CR>

nnoremap gi :YcmCompleter GoToInclude<CR>
nnoremap gd :YcmCompleter GoToDefinition<CR>
nnoremap gl :YcmCompleter GoToDeclaration<CR>
nnoremap gp :YcmCompleter GoTo<CR>

nnoremap tn :tabn<CR>
nnoremap tp :tabp<CR>



autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab

"======================插件管理======================
"set nocompatible
"filetype off 
"set rtp+=~/.config/nvim/bundle/Vundle.vim
"
"
"call vundle#begin()
"
"
""MyPlugin
"Bundle 'SuperTab'
"Plugin 'gmarik/vundle'
"Plugin 'scrooloose/nerdtree'
""Plugin 'scrooloose/syntastic'
""Plugin 'plasticboy/vim-markdown'
""Plugin 'isnowfy/python-vim-instant-markdown'
"Plugin 'Valloric/YouCompleteMe'
""Plugin 'vim-airline/vim-airline'
""Plugin 'vim-airline/vim-airline-themes'
"Plugin 'mattn/emmet-vim'
"Plugin 'vim-latex/vim-latex'
"Plugin 'tpope/vim-surround'
"
"
"
"call vundle#end()            " required
"filetype plugin indent on 

if &compatible
  set nocompatible
endif
" Add the dein installation directory into runtimepath
set runtimepath+=~/.cache/dein/repos/github.com/Shougo/dein.vim

if dein#load_state('~/.cache/dein')
  call dein#begin('~/.cache/dein')

  call dein#add('~/.cache/dein/repos/github.com/Shougo/dein.vim')
  call dein#add('neoclide/coc.nvim', {'merged':0, 'rev': 'release'})
  
  if !has('nvim')
    call dein#add('roxma/nvim-yarp')
    call dein#add('roxma/vim-hug-neovim-rpc')
  endif

  call dein#end()
  call dein#save_state()
endif

filetype plugin indent on
syntax enable


